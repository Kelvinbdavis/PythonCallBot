

from twilio.rest import Client
import discord
import os
import sys
import random
import asyncio
from twilio.twiml.voice_response import VoiceResponse
import urllib3
import time



dicttest = {}
f = open('kelvin.txt', 'r')
for line in enumerate(f.readlines()):
    dicttest[int(line[0])] = line[1].strip()

phoneDict = {
    #numbers go here. a database would be better
}
# Your Account SID from twilio.com/console

# Your Auth Token from twilio.com/console

# Declare bot with token
discordBotToken = 
discordClient = discord.Client()
client = Client(account_sid, auth_token)
r = VoiceResponse()
r.say("Welcome to twilio!")
print(str(r))
@discordClient.event
async def on_message(message):
    messageSplit = message.content.split(" ")
    author =  message.author
    Aroles = message.author.roles
    # we do not want the bot to reply to itself
    if message.author == discordClient.user:
        return
    if message.content.startswith('!callbotter'):
        if  "Council" in [x.name for x in message.author.roles]:
                await discordClient.send_message(message.channel, "List generator is working")
    if "elf/wh" in message.content.lower():
        messageSplit = message.content.split()
        await discordClient.send_message(message.channel, "Chigga approves the Elf/Wh, make it happen")

    if message.content.startswith('!callbot '):
            if "Council" in [x.name for x in message.author.roles]:
                name = messageSplit[1].lower()
                number = phoneDict.get(name)
                if name not in phoneDict.keys():
                    await discordClient.send_message(message.channel, "Please check to see if username is correct")
                elif name in phoneDict.keys():
                    await discordClient.send_message(message.channel, "Now calling " + name + "......")
                    call = client.calls.create(
                        url='http://twimlets.com/AC1241b52b02e768f87917af624e20f9a6/Weneedyou',
                        to = number ,
                        from_='+15594759628')
            else:
                await discordClient.send_message(message.channel, "Please have Council Member make call")

    if message.content.startswith('!facts'):
        insult = (random.choice(list(dicttest.values())))
        await discordClient.send_message(message.channel, insult)
    if message.content.startswith('!loginReminder'):
            time = 0
            while True:
                await discordClient.send_message(message.channel, "@everyone Reminder to go to throne page, https://utopia-game.com/wol/game/throne")
                if time < 86400:
                    await asyncio.sleep(3600)
                    time += 3600
                else:
                    break

    if message.content.startswith('!feyrpoem'):
        poems = open("feyr.txt", "r").read()
        poems = ''.join([i for i in poems if not i.isdigit()]).replace("\n\n", " ").split(' ')
        # This process the list of poems. Double line breaks separate poems, so they are removed.
        # Splitting along spaces creates a list of all words.

        index = 1
        chain = {}
        count = 75  # Desired word count of output

        # This loop creates a dicitonary called "chain". Each key is a word, and the value of each key
        # is an array of the words that immediately followed it.
        for word in poems[index:]:
            key = poems[index - 1]
            if key in chain:
                chain[key].append(word)
            else:
                chain[key] = [word]
            index += 1

        word1 = random.choice(list(chain.keys()))  # random first word
        poemline = word1.capitalize()

        # Picks the next word over and over until word count achieved
        while len(poemline.split(' ')) < count:
            word2 = random.choice(chain[word1])
            word1 = word2
            poemline += ' ' + word2

        # creates new file with output and prints it to the terminal
        with open("output.txt", "w") as file:
            file.write(poemline)
        output = open("output.txt", "r")
        for line in output:
            await discordClient.send_message(message.channel, line)





@discordClient.event
async def on_ready():
    print('Logged in as')
    print(discordClient.user.name)
    print(discordClient.user.id)
    print('------')



discordClient.run(discordBotToken)
